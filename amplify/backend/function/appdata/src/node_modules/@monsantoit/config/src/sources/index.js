const fs = require('fs')
const yaml = require('js-yaml')
const {services} = require('@monsantoit/cloud-foundry')

module.exports = {
    fromJS(options) {
        // reuse name for printing.
        // eslint-disable-next-line
        return () => require(options.src)
    },

    fromCloudFoundry() {
        return () => services || {}
    },

    fromFile(options) {
        return () =>
            new Promise((resolve, reject) => {
                fs.readFile(options.src, 'utf8', (readErr, data) => {
                    if (readErr) {
                        return reject(readErr)
                    }

                    try {
                        if (options.src.endsWith('yml')) {
                            return resolve(yaml.safeLoad(data, {json: true}))
                        }

                        return resolve(JSON.parse(data))
                    } catch (parseErr) {
                        return reject(parseErr)
                    }
                })
            })
    },

    fromEnvironment({env, alias: key, json}) {
        const value = process.env[env]

        if (json) {
            try {
                const parsed = JSON.parse(value || '{}')
                return () => ({[key]: parsed})
            } catch (err) {
                throw new Error(
                    `Environment variable ${env} is not valid JSON, but was requested to be parsed as such.  Received: ${value}`,
                    err
                )
            }
        }
        return () => ({[key]: value})
    }
}
