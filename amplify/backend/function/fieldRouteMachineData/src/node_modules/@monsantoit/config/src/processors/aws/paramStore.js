const _ = require('lodash')
const ssm = require('./ssmInstance')

const withLeadingSlash = (name) => (name.startsWith('/') ? name : `/${name}`)

const getSSMParameters = async (names) => {
    const batches = await Promise.all(
        _.chain(names)
            .map((name) => withLeadingSlash(name))
            .chunk(10)
            .map((chunkOfNames) =>
                ssm.getParameters({Names: chunkOfNames, WithDecryption: true}).promise()
            )
            .value()
    )

    const invalid = _.chain(batches)
        .map((b) => b.InvalidParameters)
        .flatten()
        .compact()
        .value()

    if (invalid && invalid.length > 0) {
        throw new Error(`The following AWS param store paths are invalid: ${invalid.join(', ')}`)
    }

    return _.chain(batches)
        .map((b) => b.Parameters)
        .flatten()
        .sortBy((result) => result.Name)
        .zip(_.sortBy(names, (name) => withLeadingSlash(name)))
        .map(([{Value}, name]) => [name, Value])
        .fromPairs()
        .value()
}

module.exports = {getSSMParameters}
